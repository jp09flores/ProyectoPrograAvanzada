//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoPrograAvanzada_Api.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProyPrograAvanEntities : DbContext
    {
        public ProyPrograAvanEntities()
            : base("name=ProyPrograAvanEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int ActualizarHabitacion(Nullable<long> iD_habitacion, string tipo_habitacion, Nullable<int> capacidad, Nullable<decimal> tarifa, Nullable<bool> disponibilidad, string img, Nullable<long> iD_localidad)
        {
            var iD_habitacionParameter = iD_habitacion.HasValue ?
                new ObjectParameter("ID_habitacion", iD_habitacion) :
                new ObjectParameter("ID_habitacion", typeof(long));
    
            var tipo_habitacionParameter = tipo_habitacion != null ?
                new ObjectParameter("tipo_habitacion", tipo_habitacion) :
                new ObjectParameter("tipo_habitacion", typeof(string));
    
            var capacidadParameter = capacidad.HasValue ?
                new ObjectParameter("Capacidad", capacidad) :
                new ObjectParameter("Capacidad", typeof(int));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            var disponibilidadParameter = disponibilidad.HasValue ?
                new ObjectParameter("Disponibilidad", disponibilidad) :
                new ObjectParameter("Disponibilidad", typeof(bool));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            var iD_localidadParameter = iD_localidad.HasValue ?
                new ObjectParameter("ID_localidad", iD_localidad) :
                new ObjectParameter("ID_localidad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarHabitacion", iD_habitacionParameter, tipo_habitacionParameter, capacidadParameter, tarifaParameter, disponibilidadParameter, imgParameter, iD_localidadParameter);
        }
    
        public virtual int ActualizarReserva(Nullable<long> iD_reserva, Nullable<long> id_usuario, Nullable<long> iD_habitacion, Nullable<System.DateTime> fecha_entrada, Nullable<System.DateTime> fecha_salida, Nullable<bool> estado, string servicios_adicionales)
        {
            var iD_reservaParameter = iD_reserva.HasValue ?
                new ObjectParameter("ID_reserva", iD_reserva) :
                new ObjectParameter("ID_reserva", typeof(long));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(long));
    
            var iD_habitacionParameter = iD_habitacion.HasValue ?
                new ObjectParameter("ID_habitacion", iD_habitacion) :
                new ObjectParameter("ID_habitacion", typeof(long));
    
            var fecha_entradaParameter = fecha_entrada.HasValue ?
                new ObjectParameter("fecha_entrada", fecha_entrada) :
                new ObjectParameter("fecha_entrada", typeof(System.DateTime));
    
            var fecha_salidaParameter = fecha_salida.HasValue ?
                new ObjectParameter("fecha_salida", fecha_salida) :
                new ObjectParameter("fecha_salida", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            var servicios_adicionalesParameter = servicios_adicionales != null ?
                new ObjectParameter("servicios_adicionales", servicios_adicionales) :
                new ObjectParameter("servicios_adicionales", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarReserva", iD_reservaParameter, id_usuarioParameter, iD_habitacionParameter, fecha_entradaParameter, fecha_salidaParameter, estadoParameter, servicios_adicionalesParameter);
        }
    
        public virtual int ActualizarUsuario(Nullable<long> id_usuario, string nombre, string correo_electronico, string contrasena, Nullable<long> iD_rol, Nullable<bool> estado)
        {
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(long));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var correo_electronicoParameter = correo_electronico != null ?
                new ObjectParameter("correo_electronico", correo_electronico) :
                new ObjectParameter("correo_electronico", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            var iD_rolParameter = iD_rol.HasValue ?
                new ObjectParameter("ID_rol", iD_rol) :
                new ObjectParameter("ID_rol", typeof(long));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarUsuario", id_usuarioParameter, nombreParameter, correo_electronicoParameter, contrasenaParameter, iD_rolParameter, estadoParameter);
        }
    
        public virtual int AgregarOpinion(Nullable<long> id_usuario, Nullable<long> iD_reserva, string opinion_texto)
        {
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(long));
    
            var iD_reservaParameter = iD_reserva.HasValue ?
                new ObjectParameter("ID_reserva", iD_reserva) :
                new ObjectParameter("ID_reserva", typeof(long));
    
            var opinion_textoParameter = opinion_texto != null ?
                new ObjectParameter("opinion_texto", opinion_texto) :
                new ObjectParameter("opinion_texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarOpinion", id_usuarioParameter, iD_reservaParameter, opinion_textoParameter);
        }
    
        public virtual int CambiarContrasena(string correo_electronico, string codigo, string contrasena)
        {
            var correo_electronicoParameter = correo_electronico != null ?
                new ObjectParameter("correo_electronico", correo_electronico) :
                new ObjectParameter("correo_electronico", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarContrasena", correo_electronicoParameter, codigoParameter, contrasenaParameter);
        }
    
        public virtual int ConsultarCasas(Nullable<bool> mostrarTodos)
        {
            var mostrarTodosParameter = mostrarTodos.HasValue ?
                new ObjectParameter("MostrarTodos", mostrarTodos) :
                new ObjectParameter("MostrarTodos", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConsultarCasas", mostrarTodosParameter);
        }
    
        public virtual int ConsultarCasaUno(Nullable<long> consecutivo)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConsultarCasaUno", consecutivoParameter);
        }
    
        public virtual ObjectResult<ConsultarHabitacion_Result> ConsultarHabitacion(Nullable<long> consecutivo)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarHabitacion_Result>("ConsultarHabitacion", consecutivoParameter);
        }
    
        public virtual ObjectResult<ConsultarHabitaciones_Result> ConsultarHabitaciones(Nullable<bool> mostrarTodos)
        {
            var mostrarTodosParameter = mostrarTodos.HasValue ?
                new ObjectParameter("MostrarTodos", mostrarTodos) :
                new ObjectParameter("MostrarTodos", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarHabitaciones_Result>("ConsultarHabitaciones", mostrarTodosParameter);
        }
    
        public virtual ObjectResult<ConsultarLocalidad_Result> ConsultarLocalidad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarLocalidad_Result>("ConsultarLocalidad");
        }
    
        public virtual ObjectResult<ConsultarReserva_Result> ConsultarReserva(Nullable<long> iD_reserva)
        {
            var iD_reservaParameter = iD_reserva.HasValue ?
                new ObjectParameter("ID_reserva", iD_reserva) :
                new ObjectParameter("ID_reserva", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarReserva_Result>("ConsultarReserva", iD_reservaParameter);
        }
    
        public virtual ObjectResult<ConsultarReservas_Result> ConsultarReservas(Nullable<bool> mostrarTodos)
        {
            var mostrarTodosParameter = mostrarTodos.HasValue ?
                new ObjectParameter("MostrarTodos", mostrarTodos) :
                new ObjectParameter("MostrarTodos", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarReservas_Result>("ConsultarReservas", mostrarTodosParameter);
        }
    
        public virtual ObjectResult<ConsultarReservaUsuario_Result> ConsultarReservaUsuario(Nullable<long> id_usuario, Nullable<bool> uno)
        {
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(long));
    
            var unoParameter = uno.HasValue ?
                new ObjectParameter("uno", uno) :
                new ObjectParameter("uno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarReservaUsuario_Result>("ConsultarReservaUsuario", id_usuarioParameter, unoParameter);
        }
    
        public virtual ObjectResult<ConsultarUsuario_Result> ConsultarUsuario(Nullable<long> id_usuario)
        {
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarUsuario_Result>("ConsultarUsuario", id_usuarioParameter);
        }
    
        public virtual ObjectResult<ConsultarUsuarios_Result> ConsultarUsuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarUsuarios_Result>("ConsultarUsuarios");
        }
    
        public virtual ObjectResult<ConsultarUsuariosAdmin_Result> ConsultarUsuariosAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarUsuariosAdmin_Result>("ConsultarUsuariosAdmin");
        }
    
        public virtual int EliminadoTotalReserva(Nullable<long> iD_reserva)
        {
            var iD_reservaParameter = iD_reserva.HasValue ?
                new ObjectParameter("ID_reserva", iD_reserva) :
                new ObjectParameter("ID_reserva", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminadoTotalReserva", iD_reservaParameter);
        }
    
        public virtual int EliminarHabitacion(Nullable<long> consecutivo)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarHabitacion", consecutivoParameter);
        }
    
        public virtual int EliminarReserva(Nullable<long> iD_reserva)
        {
            var iD_reservaParameter = iD_reserva.HasValue ?
                new ObjectParameter("ID_reserva", iD_reserva) :
                new ObjectParameter("ID_reserva", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarReserva", iD_reservaParameter);
        }
    
        public virtual int EliminarUsuario(Nullable<long> id_usuario)
        {
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarUsuario", id_usuarioParameter);
        }
    
        public virtual int GuardarErrores(string descripcion)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarErrores", descripcionParameter);
        }
    
        public virtual ObjectResult<IniciarSesionUsuario_Result> IniciarSesionUsuario(string correo_electronico, string contrasena)
        {
            var correo_electronicoParameter = correo_electronico != null ?
                new ObjectParameter("correo_electronico", correo_electronico) :
                new ObjectParameter("correo_electronico", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IniciarSesionUsuario_Result>("IniciarSesionUsuario", correo_electronicoParameter, contrasenaParameter);
        }
    
        public virtual ObjectResult<MostrarOpiniones_Result> MostrarOpiniones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MostrarOpiniones_Result>("MostrarOpiniones");
        }
    
        public virtual ObjectResult<RecuperarAccesoUsuario_Result> RecuperarAccesoUsuario(string correoElectronico)
        {
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecuperarAccesoUsuario_Result>("RecuperarAccesoUsuario", correoElectronicoParameter);
        }
    
        public virtual int RegistrarAlquiler(Nullable<long> idCasa, Nullable<System.DateTime> fecha, string usuarioAlquiler)
        {
            var idCasaParameter = idCasa.HasValue ?
                new ObjectParameter("IdCasa", idCasa) :
                new ObjectParameter("IdCasa", typeof(long));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var usuarioAlquilerParameter = usuarioAlquiler != null ?
                new ObjectParameter("UsuarioAlquiler", usuarioAlquiler) :
                new ObjectParameter("UsuarioAlquiler", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarAlquiler", idCasaParameter, fechaParameter, usuarioAlquilerParameter);
        }
    
        public virtual int RegistrarHabitacion(string tipo_habitacion, Nullable<int> capacidad, Nullable<decimal> tarifa, string img, Nullable<long> iD_localidad)
        {
            var tipo_habitacionParameter = tipo_habitacion != null ?
                new ObjectParameter("tipo_habitacion", tipo_habitacion) :
                new ObjectParameter("tipo_habitacion", typeof(string));
    
            var capacidadParameter = capacidad.HasValue ?
                new ObjectParameter("Capacidad", capacidad) :
                new ObjectParameter("Capacidad", typeof(int));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            var iD_localidadParameter = iD_localidad.HasValue ?
                new ObjectParameter("ID_localidad", iD_localidad) :
                new ObjectParameter("ID_localidad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarHabitacion", tipo_habitacionParameter, capacidadParameter, tarifaParameter, imgParameter, iD_localidadParameter);
        }
    
        public virtual int RegistrarReserva(Nullable<long> id_usuario, Nullable<long> iD_habitacion, Nullable<System.DateTime> fecha_entrada, Nullable<System.DateTime> fecha_salida, string servicios_adicionales)
        {
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(long));
    
            var iD_habitacionParameter = iD_habitacion.HasValue ?
                new ObjectParameter("ID_habitacion", iD_habitacion) :
                new ObjectParameter("ID_habitacion", typeof(long));
    
            var fecha_entradaParameter = fecha_entrada.HasValue ?
                new ObjectParameter("fecha_entrada", fecha_entrada) :
                new ObjectParameter("fecha_entrada", typeof(System.DateTime));
    
            var fecha_salidaParameter = fecha_salida.HasValue ?
                new ObjectParameter("fecha_salida", fecha_salida) :
                new ObjectParameter("fecha_salida", typeof(System.DateTime));
    
            var servicios_adicionalesParameter = servicios_adicionales != null ?
                new ObjectParameter("servicios_adicionales", servicios_adicionales) :
                new ObjectParameter("servicios_adicionales", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarReserva", id_usuarioParameter, iD_habitacionParameter, fecha_entradaParameter, fecha_salidaParameter, servicios_adicionalesParameter);
        }
    
        public virtual int RegistrarUsuario(string contrasena, string nombre, string correoElectronico)
        {
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarUsuario", contrasenaParameter, nombreParameter, correoElectronicoParameter);
        }
    }
}
